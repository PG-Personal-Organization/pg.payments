server:
  error:
    include-message: always
  port: 8082

management:
  server:
    port: 9082
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: info
  file:
    name: logs/payments-ms-app.log

spring:
  application:
    name: payments-microservice

  profiles:
    active: USER

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: jdbc:postgresql://${DATASOURCE_URL}/${DATASOURCE_DATABASE}
    username: ${DATASOURCE_USER}
    password: ${DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  batch:
    jdbc:
      initialize-schema: always
    transaction:
      isolation-level-for-create: READ_COMMITTED
    job:
      enabled: true

  main:
    allow-bean-definition-overriding: true
    lazy-initialization: true

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  jackson:
    deserialization:
      use-big-decimal-for-floats: true
    generator:
      write-bigdecimal-as-plain: true

  cache:
    type: caffeine
    cache-names: contextCache
    caffeine:
      spec: maximumSize=50000,expireAfterWrite=30m,expireAfterAccess=5m

  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:payments}

remote-cqrs:
  http:
    remote-modules[0]:
      module-name: context-auth
      url: ${CONTEXT_AUTH_HOST:http://localhost:8081}/api/cqrs
    remote-modules[1]:
      module-name: accounts
      url: ${ACCOUNTS_HOST:http://localhost:8083}/api/cqrs

pg:
  imports:
    enabled: true
    auto-start-importing-enabled: true

  kafka:
    bootstrap-server: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    enabled: true

    consumer-configs:
    # distributed processing topics
      payments-microservice-chunk-request-processing-batch-topic:
        concurrency: 6
      payments-microservice-chunk-request-importing-batch-topic:
        concurrency: 6
      payments-microservice-chunk-response-processing-batch-topic:
        concurrency: 12
      payments-microservice-chunk-response-importing-batch-topic:
        concurrency: 12
    # basic topics
      payments-microservice-scheduled-imports-parsing-topic:
        concurrency: 4
      payments-microservice-rejected-imports-parsing-topic:
        concurrency: 4
      payments-microservice-imports-parsing-finished-topic:
        concurrency: 4
      payments-microservice-scheduled-imports-importing-topic:
        concurrency: 4
      payments-microservice-completed-imports-importing-topic:
        concurrency: 4
      payments-microservice-rejected-imports-importing-topic:
        concurrency: 4

  lib:
    awsfiles:
      enabled: true
      bucket-name: ${AWS_BUCKET_NAME:payments-imported-files}
      access-key: ${AWS_ACCESS_KEY:}
      secret-key: ${AWS_SECRET_KEY:}
      aws-url: ${AWS_URL:}